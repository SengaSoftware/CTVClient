package com.Wsdl2Code.WebServices.CTVBackendService;

//------------------------------------------------------------------------------
// <wsdl2code-generated>
//    This code was generated by http://www.wsdl2code.com version  2.6
//
// Date Of Creation: 11/2/2017 10:53:38 AM
//    Please dont change this code, regeneration will override your changes
//</wsdl2code-generated>
//
//------------------------------------------------------------------------------
//
//This source code was auto-generated by Wsdl2Code  Version
//
import org.ksoap2.serialization.KvmSerializable;
import org.ksoap2.serialization.PropertyInfo;

import java.io.Serializable;
import java.util.Hashtable;
import org.ksoap2.serialization.SoapObject;
import org.ksoap2.serialization.SoapPrimitive;

public class tvOffer implements KvmSerializable, Serializable {
    
    public int id;
    public double offerActivationPrice;
    public String offerCurrency;
    public String offerDescription;
    public int offerMonthlyLength;
    public double offerMonthlyPrice;
    public String offerName;
    
    public tvOffer(){}
    
    public tvOffer(SoapObject soapObject)
    {
        if (soapObject == null)
            return;
        if (soapObject.hasProperty("id"))
        {
            Object obj = soapObject.getProperty("id");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                id = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                id = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("offerActivationPrice"))
        {
            Object obj = soapObject.getProperty("offerActivationPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                offerActivationPrice = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                offerActivationPrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("offerCurrency"))
        {
            Object obj = soapObject.getProperty("offerCurrency");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                offerCurrency = j.toString();
            }else if (obj!= null && obj instanceof String){
                offerCurrency = (String) obj;
            }
        }
        if (soapObject.hasProperty("offerDescription"))
        {
            Object obj = soapObject.getProperty("offerDescription");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                offerDescription = j.toString();
            }else if (obj!= null && obj instanceof String){
                offerDescription = (String) obj;
            }
        }
        if (soapObject.hasProperty("offerMonthlyLength"))
        {
            Object obj = soapObject.getProperty("offerMonthlyLength");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                offerMonthlyLength = Integer.parseInt(j.toString());
            }else if (obj!= null && obj instanceof Number){
                offerMonthlyLength = (Integer) obj;
            }
        }
        if (soapObject.hasProperty("offerMonthlyPrice"))
        {
            Object obj = soapObject.getProperty("offerMonthlyPrice");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                offerMonthlyPrice = Double.parseDouble(j.toString());
            }else if (obj!= null && obj instanceof Number){
                offerMonthlyPrice = (Double) obj;
            }
        }
        if (soapObject.hasProperty("offerName"))
        {
            Object obj = soapObject.getProperty("offerName");
            if (obj != null && obj.getClass().equals(SoapPrimitive.class)){
                SoapPrimitive j =(SoapPrimitive) obj;
                offerName = j.toString();
            }else if (obj!= null && obj instanceof String){
                offerName = (String) obj;
            }
        }
    }
    @Override
    public Object getProperty(int arg0) {
        switch(arg0){
            case 0:
                return id;
            case 1:
                return offerActivationPrice;
            case 2:
                return offerCurrency;
            case 3:
                return offerDescription;
            case 4:
                return offerMonthlyLength;
            case 5:
                return offerMonthlyPrice;
            case 6:
                return offerName;
        }
        return null;
    }
    
    @Override
    public int getPropertyCount() {
        return 7;
    }
    
    @Override
    public void getPropertyInfo(int index, @SuppressWarnings("rawtypes") Hashtable arg1, PropertyInfo info) {
        switch(index){
            case 0:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "id";
                break;
            case 1:
                info.type = Double.class;
                info.name = "offerActivationPrice";
                break;
            case 2:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "offerCurrency";
                break;
            case 3:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "offerDescription";
                break;
            case 4:
                info.type = PropertyInfo.INTEGER_CLASS;
                info.name = "offerMonthlyLength";
                break;
            case 5:
                info.type = Double.class;
                info.name = "offerMonthlyPrice";
                break;
            case 6:
                info.type = PropertyInfo.STRING_CLASS;
                info.name = "offerName";
                break;
        }
    }
    /*
    @Override
    public String getInnerText() {
        return null;
    }
    
    
    @Override
    public void setInnerText(String s) {
    }
    */
    
    @Override
    public void setProperty(int arg0, Object arg1) {
    }
    
}
